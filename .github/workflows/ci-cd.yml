name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: write
  actions: read
  checks: write

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Update npm (ensure >= 11.5.1)
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    environment: aluvia-playwright-env
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Update npm (ensure >= 11.5.1)
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Ensure tokenless environment (OIDC only)
        run: |
          if env | grep -q '^NODE_AUTH_TOKEN='; then
            echo "NODE_AUTH_TOKEN is set; remove it for Trusted Publishing." >&2
            exit 1
          fi
          npm config get //registry.npmjs.org/:_authToken || true

      - name: Publish to NPM (Trusted Publisher)
        run: npm publish --access public

      - name: Derive version without 'v' prefix
        id: ver
        run: |
          # prefer package.json version (matches what was published)
          echo "PKG_VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV
          echo "TAG_NO_V=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        continue-on-error: true
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed

            See [CHANGELOG.md](https://github.com/xtrella/aluvia-playwright/blob/main/CHANGELOG.md) for detailed changes.

            ## Installation

            ```bash
            npm install aluvia-playwright@${{ env.PKG_VERSION }}
            ```

            ## Documentation

            Visit our [GitHub repository](https://github.com/xtrella/aluvia-playwright) for complete documentation and examples.
          draft: false
          prerelease: false
